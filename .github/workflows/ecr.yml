name: ECR Deploy
on:
    push:
        branches:
        - migrate_aws
jobs:
    release-notes:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                python-version: '3.12'
                cache: 'pip'
            - name: Build Pydoc-Markdown
              run: |
                pip install pydoc-markdown
                mkdir -p $(pwd)/tmp_docs
                pydoc-markdown
            - name: Upload Release Notes to Wiki
              uses: docker://decathlon/wiki-page-creator-action:latest
              env:
                ACTION_MAIL: chenmengyang_2016@hotmail.com
                ACTION_NAME: SuperChenSSS
                GH_PAT: ${{ secrets.GIT_TOKEN }}
                MD_FOLDER: tmp_docs/content
                OWNER: SuperChenSSS
                REPO_NAME: comp7940-lab

    deploy:
        name: Deploy app
        runs-on: ubuntu-latest
        concurrency: deploy-group
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ vars.AWS_REGION }}
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ github.sha }}
                ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
              run: |
                # Build a docker container and
                # push it to ECR so that it can
                # be deployed to ECS.
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT